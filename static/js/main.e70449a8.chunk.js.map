{"version":3,"sources":["BlockOnMainPage/BlockOnMainPage.module.scss","SpecificItem/SpecificItem.module.scss","CardItem/CardItem.module.scss","AllItems/AllItems.module.scss","Nav/Nav.module.scss","api/api.ts","redux/people-reducer.ts","CardItem/CardItem.tsx","common/commonFunctions.ts","BlockOnMainPage/BlockOnMainPage.tsx","redux/planet-reducer.ts","redux/starships-reducer.ts","redux/vehicles-reducer.ts","Nav/Nav.tsx","AllItems/AllItems.tsx","PlanetsPage/PlanetsPage.tsx","StarshipsPage/StarshipsPage.tsx","VehiclesPage/VehiclesPage.tsx","PeoplesPage/PeoplesPage.tsx","redux/specificItem-reducer.ts","SpecificItem/SpecificItem.tsx","App.tsx","reportWebVitals.ts","api/store.ts","index.tsx"],"names":["module","exports","instance","axios","create","baseURL","commonApi","species","id","get","peopleApi","planetsApi","starshipsApi","vehiclesApi","initState","people","CardItem","props","className","style","cardNav","to","name","pictureNumberString","block_item","src","imageURL","onError","e","target","alt","mainImage","itemName","getPictureNumberString","url","match","join","BlockOnMainPage","useState","state","setState","useEffect","newState","arrayOfElements","length","i","push","arrayBlocks","map","item","toLowerCase","wrapperContainer","container","block","showAll","planets","starships","vehicles","Nav","nav","AllItem","baseImageURL","useSelector","peoplesData","starshipsData","vehiclesData","planetsData","arrayOfItems","useDispatch","typeOfItems","PlanetsPage","AllItems","StarshipsPage","VehiclesPage","PeoplesPage","specificItem","SpecificItem","useParams","dispatch","data","specificItemData","then","response","type","payload","getSpecificItemThunk","entries","Object","console","log","actualInfo","toUpperCase","substring","split","specificItemWrapper","photo","info","color","App","arrayOfPeoples","arrayOfPlanets","arrayOfStarships","arrayOfVehicles","results","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e70449a8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardNav\":\"BlockOnMainPage_cardNav__3XeRG\",\"container\":\"BlockOnMainPage_container__tZtBz\",\"block\":\"BlockOnMainPage_block__125iM\",\"block_item\":\"BlockOnMainPage_block_item__2Up1N\",\"mainImage\":\"BlockOnMainPage_mainImage__3kihy\",\"wrapperContainer\":\"BlockOnMainPage_wrapperContainer__3Olaw\",\"showAll\":\"BlockOnMainPage_showAll__1P_4Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"specificItemWrapper\":\"SpecificItem_specificItemWrapper__cK4Ds\",\"photo\":\"SpecificItem_photo__26RLp\",\"info\":\"SpecificItem_info__kM2Ex\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardNav\":\"CardItem_cardNav__2zy8b\",\"container\":\"CardItem_container__sDI1r\",\"block\":\"CardItem_block__2lZDc\",\"block_item\":\"CardItem_block_item__30vff\",\"mainImage\":\"CardItem_mainImage__eBD57\",\"wrapperContainer\":\"CardItem_wrapperContainer__hNzeR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardNav\":\"AllItems_cardNav__3TbcF\",\"container\":\"AllItems_container__1vn2X\",\"block\":\"AllItems_block__3lyCN\",\"block_item\":\"AllItems_block_item__1MJy0\",\"mainImage\":\"AllItems_mainImage___elSk\",\"wrapperContainer\":\"AllItems_wrapperContainer__1vX7w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__3HRmH\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://swapi.dev/api/'\r\n})\r\n\r\nexport const commonApi = {\r\n    getSpecificItem(species: string, id: string){\r\n        return instance.get(`${species}/${id}`)\r\n    }\r\n}\r\n\r\nexport const peopleApi = {\r\n    getAllPeople(){\r\n        return instance.get(`people`)\r\n    }\r\n}\r\n\r\nexport const planetsApi = {\r\n    getAllPlanets(){\r\n        return instance.get(`planets`)\r\n    }\r\n}\r\n\r\nexport const starshipsApi = {\r\n    getAllStarships(){\r\n        return instance.get(`starships`)\r\n    }\r\n}\r\n\r\nexport const vehiclesApi = {\r\n    getAllVehicles(){\r\n        return instance.get(`vehicles`)\r\n    }\r\n}\r\n\r\n\r\n","import {Dispatch} from \"react\";\r\nimport {peopleApi} from \"../api/api\";\r\n\r\nexport type PeopleItemStateType = {\r\n    birth_year: string\r\n    eye_color: string\r\n    films: Array<string>\r\n    gender: string\r\n    hair_color: string\r\n    height: string\r\n    homeworld: string\r\n    mass: string\r\n    name: string\r\n    skin_color: string\r\n    created: string\r\n    edited: string\r\n    species: Array<string>\r\n    starships: Array<string>\r\n    url: string\r\n    vehicles: Array<string>\r\n}\r\ntype PeopleStateType = {\r\n    people: Array<PeopleItemStateType>\r\n    //count: number\r\n    //previous: null | string\r\n}\r\nconst initState: PeopleStateType = {\r\n    people: []\r\n}\r\n\r\nexport const peopleReducer = (state = initState, action: ActionTypes): PeopleStateType => {\r\n    switch (action.type) {\r\n        case 'SET_PEOPLE':\r\n            return {...state, people: [ ...action.payload.people, ...state.people]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//AC\r\ntype ActionTypes = ReturnType<typeof setPeopleAC>;\r\nexport const setPeopleAC = (people: Array<PeopleItemStateType>) => {\r\n    return {\r\n        type: 'SET_PEOPLE',\r\n        payload: {\r\n            people: people\r\n        }\r\n    } as const\r\n}\r\n//THUNK\r\nexport const getPeopleThunk = () => {\r\n    return (dispatch: Dispatch<ActionTypes>) => {\r\n            peopleApi.getAllPeople()\r\n                .then(response => {\r\n                    dispatch(setPeopleAC(response.data.results))\r\n                })\r\n    }\r\n}\r\n","import style from './CardItem.module.scss'\r\nimport React, {SyntheticEvent} from \"react\";\r\nimport {NavLink, Route} from \"react-router-dom\";\r\nimport SpecificItem from \"../SpecificItem/SpecificItem\";\r\n\r\nexport type CardItemPropsType = {\r\n    pictureNumberString: string\r\n    itemName: string\r\n    imageURL: string\r\n    name: string\r\n}\r\n\r\nconst CardItem = (props: CardItemPropsType) => {\r\n\r\n    const error = (e: SyntheticEvent<HTMLImageElement>) => {\r\n        //@ts-ignore\r\n        e.target.src = 'https://starwars-visualguide.com/assets/img/placeholder.jpg'\r\n    }\r\n\r\n    return <NavLink className={style.cardNav} to={`/${props.name}/${props.pictureNumberString}`}>\r\n        <div className={style.block_item} key={props.pictureNumberString}>\r\n            <img src={props.imageURL + `${props.pictureNumberString}.jpg`}\r\n                 onError={error}\r\n                 alt={'image'}\r\n                 className={style.mainImage}/>\r\n            <span>{props.itemName}</span>\r\n\r\n        </div>\r\n    </NavLink>\r\n}\r\n\r\n\r\nexport default CardItem\r\n","\r\nexport const getPictureNumberString = (url:string) => {\r\n    let urlNumber = url.match(/[0-9]/g) || [];\r\n    let pictureNumberString = urlNumber.join('');\r\n    return pictureNumberString\r\n}\r\n\r\n","import React, {ReactEventHandler, SyntheticEvent, useEffect, useState} from 'react'\r\nimport {PeopleItemStateType} from \"../redux/people-reducer\";\r\nimport style from './BlockOnMainPage.module.scss'\r\nimport {PlanetItemStateType} from \"../redux/planet-reducer\";\r\nimport {StarshipItemStateType} from \"../redux/starships-reducer\";\r\nimport {VehicleItemStateType} from \"../redux/vehicles-reducer\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport CardItem from \"../CardItem/CardItem\";\r\nimport { getPictureNumberString } from '../common/commonFunctions';\r\n\r\ntype LocalStateType = Array<PeopleItemStateType> |\r\n    Array<PlanetItemStateType> |\r\n    Array<StarshipItemStateType> |\r\n    Array<VehicleItemStateType>\r\ntype ItemStateType = PeopleItemStateType | PlanetItemStateType |\r\n    StarshipItemStateType | VehicleItemStateType\r\n\r\ntype BlockOnMainPagePropsType = {\r\n    arrayOfElements: LocalStateType\r\n    imageURL: string\r\n    name: string\r\n}\r\n\r\n\r\nfunction BlockOnMainPage(props: BlockOnMainPagePropsType) {\r\n\r\n    let [state, setState] = useState<LocalStateType>([])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const newState = [];\r\n        if(props.arrayOfElements.length === 10){\r\n            for (let i = 0; i < 8; i++) {\r\n                newState.push(props.arrayOfElements[i])\r\n            }\r\n        }\r\n        setState(props.arrayOfElements)\r\n    }, [props.arrayOfElements])\r\n    const arrayBlocks = state.map((item: ItemStateType ) => {\r\n        const pictureNumberString = getPictureNumberString(item.url)\r\n        return <CardItem pictureNumberString={pictureNumberString}\r\n                         name={props.name.toLowerCase()}\r\n                         itemName={item.name}\r\n                         imageURL={props.imageURL}/>\r\n    })\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={style.wrapperContainer}>\r\n                <div className={style.container}>\r\n                    <h1>{props.name}</h1>\r\n                    <div className={style.block}>\r\n                        {arrayBlocks}\r\n                    </div>\r\n                    <NavLink to={`/${props.name.toLowerCase()}`} className={style.showAll}>\r\n                        show all {props.name.toLowerCase()}\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default BlockOnMainPage","import {Dispatch} from \"react\";\r\nimport {planetsApi} from \"../api/api\";\r\n\r\nexport type PlanetItemStateType = {\r\n    climate: string\r\n    created: string\r\n    diameter: string\r\n    edited: string\r\n    films: Array<string>\r\n    gravity: string\r\n    name: string\r\n    orbital_period: string\r\n    population: string\r\n    residents: Array<string>\r\n    rotation_period: string\r\n    surface_water: string\r\n    terrain: string\r\n    url: string\r\n}\r\ntype PlanetsStateType = {\r\n    planets: Array<PlanetItemStateType>\r\n    //count: number\r\n    //previous: null | string\r\n}\r\nconst initState: PlanetsStateType = {\r\n    planets: []\r\n}\r\n\r\n\r\nexport const planetsReducer = (state = initState, action: ActionTypes): PlanetsStateType => {\r\n    switch (action.type) {\r\n        case 'SET_PLANETS':\r\n            return {...state, planets: [...action.payload.planets, ...state.planets]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//AC\r\ntype ActionTypes = ReturnType<typeof setPlanetsAC>;\r\nexport const setPlanetsAC = (planets: Array<PlanetItemStateType>) => {\r\n    return {\r\n        type: 'SET_PLANETS',\r\n        payload: {\r\n            planets: planets\r\n        }\r\n    } as const\r\n}\r\n//THUNK\r\nexport const getPlanetsThunk = () => {\r\n    return (dispatch: Dispatch<ActionTypes>) => {\r\n        planetsApi.getAllPlanets().then(response => {\r\n            dispatch(setPlanetsAC(response.data.results))\r\n        })\r\n    }\r\n}\r\n\r\n\r\n","import {Dispatch} from \"react\";\r\nimport {starshipsApi} from \"../api/api\";\r\n\r\nexport type StarshipItemStateType = {\r\n    MGLT: string\r\n    cargo_capacity: string\r\n    consumables: string\r\n    cost_in_credits: string\r\n    created: string\r\n    crew: string\r\n    edited: string\r\n    hyperdrive_rating: string\r\n    length: string\r\n    manufacturer: string\r\n    max_atmosphering_speed: string\r\n    model: string\r\n    name: string\r\n    passengers: string\r\n    films: string[]\r\n    pilots: string[]\r\n    starship_class: string\r\n    url: string\r\n}\r\ntype StarshipsStateType = {\r\n    starships: Array<StarshipItemStateType>\r\n    //count: number\r\n    //previous: null | string\r\n}\r\nconst initState: StarshipsStateType = {\r\n    starships: []\r\n}\r\n\r\nexport const starshipsReducer = (state = initState, action: ActionTypes): StarshipsStateType => {\r\n    switch (action.type) {\r\n        case 'SET_STARSHIPS':\r\n            return {...state, starships: [ ...action.payload.starships, ...state.starships]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//AC\r\ntype ActionTypes = ReturnType<typeof setStarshipsAC>;\r\nexport const setStarshipsAC = (starships: Array<StarshipItemStateType>) => {\r\n    return {\r\n        type: 'SET_STARSHIPS',\r\n        payload: {\r\n            starships\r\n        }\r\n    } as const\r\n}\r\n//THUNK\r\nexport const getStarshipsThunk = () => {\r\n    return (dispatch: Dispatch<ActionTypes>) => {\r\n            starshipsApi.getAllStarships()\r\n                .then(response => {\r\n                    dispatch(setStarshipsAC(response.data.results))\r\n                })\r\n    }\r\n}\r\n","import {Dispatch} from \"react\";\r\nimport {vehiclesApi} from \"../api/api\";\r\n\r\nexport type VehicleItemStateType = {\r\n    cargo_capacity: string\r\n    consumables: string\r\n    cost_in_credits: string\r\n    created: string\r\n    crew: string\r\n    edited: string\r\n    length: string\r\n    manufacturer: string\r\n    max_atmosphering_speed: string\r\n    model: string\r\n    name: string\r\n    passengers: string\r\n    pilots: string[]\r\n    films: string[]\r\n    url: string\r\n    vehicle_class: string\r\n}\r\ntype VehiclesStateType = {\r\n    vehicles: Array<VehicleItemStateType>\r\n    //count: number\r\n    //previous: null | string\r\n}\r\nconst initState: VehiclesStateType = {\r\n    vehicles: []\r\n}\r\n\r\n\r\nexport const vehiclesReducer = (state = initState, action: ActionTypes): VehiclesStateType => {\r\n    switch (action.type) {\r\n        case 'SET_VEHICLES':\r\n            return {...state, vehicles: [...action.payload.vehicles, ...state.vehicles]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//AC\r\ntype ActionTypes = ReturnType<typeof setVehiclesAC>;\r\nexport const setVehiclesAC = (vehicles: Array<VehicleItemStateType>) => {\r\n    return {\r\n        type: 'SET_VEHICLES',\r\n        payload: {\r\n            vehicles\r\n        }\r\n    } as const\r\n}\r\n//THUNK\r\nexport const getVehiclesThunk = () => {\r\n    return (dispatch: Dispatch<ActionTypes>) => {\r\n        vehiclesApi.getAllVehicles().then(response => {\r\n            dispatch(setVehiclesAC(response.data.results))\r\n        })\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport style from './Nav.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Nav = () => {\r\n    return <nav className={style.nav}>\r\n        <NavLink to={'/'}>Main</NavLink>\r\n        <NavLink to={'/characters'}>Characters</NavLink>\r\n        <NavLink to={'/planets'}>Planets</NavLink>\r\n        <NavLink to={'/starships'}>Starships</NavLink>\r\n        <NavLink to={'/vehicles'}>Vehicles</NavLink>\r\n    </nav>\r\n}\r\n\r\nexport default Nav","import React, {useEffect} from 'react';\r\nimport style from \"./AllItems.module.scss\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../api/store\";\r\nimport {getPeopleThunk, PeopleItemStateType} from \"../redux/people-reducer\";\r\nimport {getPlanetsThunk, PlanetItemStateType} from \"../redux/planet-reducer\";\r\nimport {getStarshipsThunk, StarshipItemStateType} from \"../redux/starships-reducer\";\r\nimport {getVehiclesThunk, VehicleItemStateType} from \"../redux/vehicles-reducer\";\r\nimport {getPictureNumberString} from \"../common/commonFunctions\";\r\nimport CardItem, { CardItemPropsType } from \"../CardItem/CardItem\";\r\nimport { Route } from 'react-router-dom';\r\n\r\ntype AllItemsPropsType = {\r\n    typeOfItems: 'characters' | 'starships' | 'planets' | 'vehicles'\r\n\r\n}\r\n\r\ntype ArrayOfItemsType = Array<PeopleItemStateType> |\r\n    Array<PlanetItemStateType> |\r\n    Array<StarshipItemStateType> |\r\n    Array<VehicleItemStateType>\r\n\r\nconst AllItem = (props: AllItemsPropsType) => {\r\n\r\n    const baseImageURL = 'https://starwars-visualguide.com/assets/img/';\r\n\r\n    const {\r\n        peoplesData,\r\n        starshipsData,\r\n        vehiclesData,\r\n        planetsData\r\n    } = useSelector<RootStateType, RootStateType>(state => state);\r\n    const dispatch = useDispatch()\r\n\r\n    /*    useEffect(() => {\r\n            props.typeOfItems === 'peoples' && dispatch(getPeopleThunk())\r\n            props.typeOfItems === 'planets' && dispatch(getPlanetsThunk())\r\n            props.typeOfItems === 'starships' && dispatch(getStarshipsThunk())\r\n            props.typeOfItems === 'vehicles' && dispatch(getVehiclesThunk())\r\n        }, []);*/\r\n\r\n    let arrayOfItems: Array<any> = [];\r\n\r\n    switch (props.typeOfItems) {\r\n        case 'characters':\r\n            arrayOfItems = peoplesData.people.map((item) => {\r\n                const pictureNumberString = getPictureNumberString(item.url)\r\n                return <CardItem pictureNumberString={pictureNumberString}\r\n                                 name={props.typeOfItems}\r\n                                 itemName={item.name} imageURL={baseImageURL + props.typeOfItems + '/'}/>\r\n            })\r\n            break\r\n        case 'planets':\r\n            arrayOfItems = planetsData.planets.map((item) => {\r\n                const pictureNumberString = getPictureNumberString(item.url)\r\n                return <CardItem pictureNumberString={pictureNumberString}\r\n                                 name={props.typeOfItems}\r\n                                 itemName={item.name} imageURL={baseImageURL + props.typeOfItems + '/'}/>\r\n            })\r\n            break\r\n        case 'starships':\r\n            arrayOfItems = starshipsData.starships.map((item) => {\r\n                const pictureNumberString = getPictureNumberString(item.url)\r\n                return <CardItem pictureNumberString={pictureNumberString}\r\n                                 name={props.typeOfItems}\r\n                                 itemName={item.name} imageURL={baseImageURL + props.typeOfItems + '/'}/>\r\n            })\r\n            break\r\n        case 'vehicles':\r\n            arrayOfItems = vehiclesData.vehicles.map((item) => {\r\n                const pictureNumberString = getPictureNumberString(item.url)\r\n                return <CardItem pictureNumberString={pictureNumberString}\r\n                                 name={props.typeOfItems}\r\n                                 itemName={item.name} imageURL={baseImageURL + props.typeOfItems + '/'}/>\r\n            })\r\n            break\r\n        default:\r\n            break\r\n    }\r\n\r\n\r\n    return <div className={style.wrapperContainer}>\r\n        <div className={style.container}>\r\n            <div className={style.block}>\r\n                {arrayOfItems}\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default AllItem","import React from 'react';\r\nimport AllItems from \"../AllItems/AllItems\";\r\n\r\ntype PlanetsPagePropsType = {\r\n    typeOfItems: 'characters' | 'starships' | 'planets' | 'vehicles'\r\n}\r\n\r\nconst PlanetsPage = (props: PlanetsPagePropsType) => {\r\n    return <AllItems typeOfItems={props.typeOfItems}/>\r\n}\r\n\r\nexport default PlanetsPage","import React from 'react';\r\nimport AllItems from \"../AllItems/AllItems\";\r\n\r\ntype StarshipsPagePropsType = {\r\n    typeOfItems: 'characters' | 'starships' | 'planets' | 'vehicles'\r\n}\r\n\r\nconst StarshipsPage = (props: StarshipsPagePropsType) => {\r\n    return <AllItems typeOfItems={props.typeOfItems}/>\r\n}\r\n\r\nexport default StarshipsPage","import React from 'react';\r\nimport AllItems from \"../AllItems/AllItems\";\r\n\r\ntype VehiclesPagePropsType = {\r\n    typeOfItems: 'characters' | 'starships' | 'planets' | 'vehicles'\r\n}\r\n\r\nconst VehiclesPage = (props: VehiclesPagePropsType) => {\r\n    return <AllItems typeOfItems={props.typeOfItems}/>\r\n}\r\n\r\nexport default VehiclesPage","import React from 'react';\r\nimport AllItems from \"../AllItems/AllItems\";\r\n\r\ntype PeoplesPagePropsType = {\r\n    typeOfItems: 'characters' | 'starships' | 'planets' | 'vehicles'\r\n}\r\n\r\nconst PeoplesPage = (props: PeoplesPagePropsType) => {\r\n    return <div>\r\n        <AllItems typeOfItems={props.typeOfItems}/>\r\n    </div>\r\n\r\n}\r\n\r\nexport default PeoplesPage","import {Dispatch} from \"react\";\r\nimport {commonApi, peopleApi} from \"../api/api\";\r\nimport { PeopleItemStateType } from \"./people-reducer\";\r\nimport {StarshipItemStateType} from \"./starships-reducer\";\r\nimport {PlanetItemStateType} from \"./planet-reducer\";\r\nimport {VehicleItemStateType} from \"./vehicles-reducer\";\r\n\r\nexport type SpecificItemType = PeopleItemStateType | StarshipItemStateType |\r\n    PlanetItemStateType | VehicleItemStateType;\r\n\r\nexport type SpecificItemStateType = {\r\n    specificItem: SpecificItemType\r\n}\r\n\r\nconst initState = {\r\n    specificItem: {} as SpecificItemType\r\n}\r\n\r\nexport const specificItemReducer = (state  = initState, action: ActionTypes): SpecificItemStateType => {\r\n    switch (action.type) {\r\n        case 'SET_SPECIFIC_ITEM':\r\n            return {...state, specificItem: action.payload.specificItem}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//AC\r\ntype ActionTypes = ReturnType<typeof setSpecificItemAC>;\r\nexport const setSpecificItemAC = (specificItem: SpecificItemType) => {\r\n    return {\r\n        type: 'SET_SPECIFIC_ITEM',\r\n        payload: {\r\n            specificItem\r\n        }\r\n    } as const\r\n}\r\n//THUNK\r\nexport const getSpecificItemThunk = (species: string, id: string) => {\r\n    return (dispatch: Dispatch<ActionTypes>) => {\r\n            commonApi.getSpecificItem(species, id)\r\n                .then(response => {\r\n                    dispatch(setSpecificItemAC(response.data))\r\n                })\r\n    }\r\n}\r\n","import React, {SyntheticEvent, useEffect} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport style from './SpecificItem.module.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getSpecificItemThunk, SpecificItemType} from \"../redux/specificItem-reducer\";\r\nimport {RootStateType} from \"../api/store\";\r\n\r\n\r\nconst SpecificItem = () => {\r\n\r\n    const {species, id} = useParams<{ species: string, id: string }>();\r\n    const dispatch = useDispatch();\r\n    const data = useSelector<RootStateType, SpecificItemType>(state => state.specificItemData.specificItem)\r\n\r\n    const imageURL = 'https://starwars-visualguide.com/assets/img/'\r\n    const error = (e: SyntheticEvent<HTMLImageElement>) => {\r\n        //@ts-ignore\r\n        e.target.src = 'https://starwars-visualguide.com/assets/img/placeholder.jpg'\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getSpecificItemThunk(species, id))\r\n    }, [])\r\n\r\n\r\n    const entries = Object.entries(data)\r\n    console.log(entries)\r\n\r\n    const actualInfo = entries.map((item) => {\r\n        if (item[0] !== \"films\" && item[0] !== 'species' && item[0] !== 'vehicles' && item[0] !== 'starships'\r\n            && item[0] !== 'created' && item[0] !== 'edited' && item[0] !== 'url' && item[0] !== 'homeworld'\r\n            && item[0] !== 'residents' && item[0] !== 'pilots') {\r\n\r\n            const property = (item[0][0].toUpperCase() + item[0].substring(1) + ': ').split('_').join(' ');\r\n            return [property, item[1]]\r\n        }\r\n    })\r\n\r\n\r\n    return <div className={style.specificItemWrapper}>\r\n\r\n        <div className={style.photo}>\r\n            <img src={imageURL + `${species}/${id}.jpg`}\r\n                 onError={error}\r\n                 alt={'image'}\r\n                 className={style.mainImage}/>\r\n        </div>\r\n\r\n\r\n        <div className={style.info} style={{color: 'white'}}>\r\n            {actualInfo.map(item => {\r\n                return <div>{item}</div>\r\n            })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default SpecificItem","import React, {useEffect} from 'react';\nimport './App.scss';\nimport { RootStateType } from './api/store';\nimport {getPeopleThunk, PeopleItemStateType} from './redux/people-reducer';\nimport BlockOnMainPage from \"./BlockOnMainPage/BlockOnMainPage\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport {getPlanetsThunk, PlanetItemStateType} from './redux/planet-reducer';\nimport {getStarshipsThunk, StarshipItemStateType } from './redux/starships-reducer';\nimport {getVehiclesThunk, VehicleItemStateType} from './redux/vehicles-reducer';\nimport Nav from './Nav/Nav';\nimport AllItems from \"./AllItems/AllItems\";\nimport { Route } from 'react-router-dom';\nimport PlanetsPage from \"./PlanetsPage/PlanetsPage\";\nimport StarshipsPage from \"./StarshipsPage/StarshipsPage\";\nimport VehiclesPage from \"./VehiclesPage/VehiclesPage\";\nimport PeoplesPage from \"./PeoplesPage/PeoplesPage\";\nimport SpecificItem from \"./SpecificItem/SpecificItem\";\n\n\n\n\nfunction App() {\n\n    const charactersImageURL = 'https://starwars-visualguide.com/assets/img/characters/';\n    const planetsImageURL = 'https://starwars-visualguide.com/assets/img/planets/';\n    const starshipsImageURL = 'https://starwars-visualguide.com/assets/img/starships/';\n    const vehiclesImageURL = 'https://starwars-visualguide.com/assets/img/vehicles/';\n\n    const dispatch = useDispatch()\n\n    const arrayOfPeoples = useSelector<RootStateType, Array<PeopleItemStateType>>(state => state.peoplesData.people);\n    const arrayOfPlanets = useSelector<RootStateType, Array<PlanetItemStateType>>(state => state.planetsData.planets);\n    const arrayOfStarships = useSelector<RootStateType, Array<StarshipItemStateType>>(state => state.starshipsData.starships);\n    const arrayOfVehicles = useSelector<RootStateType, Array<VehicleItemStateType>>(state => state.vehiclesData.vehicles);\n\n\n    useEffect(() => {\n        dispatch(getPeopleThunk())\n        dispatch(getPlanetsThunk())\n        dispatch(getStarshipsThunk())\n        dispatch(getVehiclesThunk())\n    },[])\n\n    return (\n        <div className=\"App\">\n            <Nav/>\n\n            <Route exact path='/' render={() => <BlockOnMainPage arrayOfElements={arrayOfPeoples}\n                                                           name={'Characters'}\n                                                           imageURL={charactersImageURL} />}/>\n            <Route exact path='/' render={() => <BlockOnMainPage arrayOfElements={arrayOfPlanets}\n                                                           name={'Planets'}\n                                                           imageURL={planetsImageURL}/>}/>\n            <Route exact path='/' render={() => <BlockOnMainPage arrayOfElements={arrayOfStarships}\n                                                           name={'Starships'}\n                                                           imageURL={starshipsImageURL}/>}/>\n            <Route exact path='/' render={() => <BlockOnMainPage arrayOfElements={arrayOfVehicles}\n                                                           name={'Vehicles'}\n                                                           imageURL={vehiclesImageURL}/>}/>\n\n            <Route exact path='/characters' render={() => <PeoplesPage typeOfItems={'characters'}/>}/>\n            <Route exact path='/starships' render={() => <StarshipsPage typeOfItems={'starships'}/>}/>\n            <Route exact path='/vehicles' render={() => <VehiclesPage typeOfItems={'vehicles'}/>}/>\n            <Route exact path='/planets' render={() => <PlanetsPage typeOfItems={'planets'}/>}/>\n\n            <Route path={`/:species/:id`} render={() => <SpecificItem/>}/>\n        </div>\n    );\n}\n\nexport default App\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import thunkMiddleware from 'redux-thunk'\r\nimport { peopleReducer } from \"../redux/people-reducer\";\r\nimport {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {planetsReducer} from \"../redux/planet-reducer\";\r\nimport {starshipsReducer} from \"../redux/starships-reducer\";\r\nimport { vehiclesReducer } from '../redux/vehicles-reducer';\r\nimport { specificItemReducer } from '../redux/specificItem-reducer';\r\n\r\n\r\n\r\nlet reducers = combineReducers({\r\n    peoplesData: peopleReducer,\r\n    planetsData: planetsReducer,\r\n    starshipsData: starshipsReducer,\r\n    vehiclesData: vehiclesReducer,\r\n    specificItemData: specificItemReducer\r\n})\r\n\r\nexport type ReducersType = typeof reducers;\r\nexport type RootStateType = ReturnType<ReducersType>\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from './api/store';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <BrowserRouter>\n                <App/>\n            </BrowserRouter>\n        </Provider>\n\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["PeoplesPage/PeoplesPage.module.scss","SpecificItem/SpecificItem.module.scss","BlockOnMainPage/BlockOnMainPage.module.scss","CardItem/CardItem.module.scss","AllItems/AllItems.module.scss","ButtonComponent/ButtonComponent.module.scss","Nav/Nav.module.scss","Header/Header.module.scss","api/api.ts","redux/people-reducer.ts","CardItem/CardItem.tsx","common/commonFunctions.ts","BlockOnMainPage/BlockOnMainPage.tsx","redux/planet-reducer.ts","redux/starships-reducer.ts","redux/vehicles-reducer.ts","AllItems/AllItems.tsx","ButtonComponent/ButtonComponent.tsx","PlanetsPage/PlanetsPage.tsx","StarshipsPage/StarshipsPage.tsx","VehiclesPage/VehiclesPage.tsx","PeoplesPage/PeoplesPage.tsx","redux/specificItem-reducer.ts","SpecificItem/SpecificItem.tsx","Nav/Nav.tsx","Header/Header.tsx","App.tsx","reportWebVitals.ts","api/store.ts","index.tsx"],"names":["module","exports","instance","axios","create","baseURL","commonApi","species","id","get","page","peopleApi","planetsApi","starshipsApi","vehiclesApi","initState","people","count","setPeopleAC","type","payload","CardItem","props","className","style","cardNav","to","name","pictureNumberString","block_item","src","imageURL","onError","e","target","alt","mainImage","itemName","getPictureNumberString","url","match","join","BlockOnMainPage","useState","state","setState","useEffect","newState","arrayOfElements","length","i","push","arrayBlocks","map","item","toLowerCase","wrapperContainer","container","block","showAll","planets","setPlanetsAC","starships","setStarshipsAC","vehicles","setVehiclesAC","AllItem","useSelector","peoplesData","starshipsData","vehiclesData","planetsData","arrayOfItems","typeOfItems","ButtonComponent","buttonsWrapper","disabled","actualPage","onClick","previousPage","size","icon","faArrowLeft","maxPage","nextPage","faArrowRight","PlanetsPage","setPage","Math","ceil","dispatch","useDispatch","then","response","data","results","getNextPagePlanetsThunk","pageWrapper","nameWrapper","AllItems","StarshipsPage","getNextPageStarshipsThunk","VehiclesPage","getNextPageVehiclesThunk","PeoplesPage","getNextPagePeopleThunk","specificItem","getSpecificItemThunk","SpecificItem","useParams","specificItemData","entries","Object","console","log","infoArray","filter","toUpperCase","substring","split","specificItemWrapper","mainInfo","photo","info","splice","infoItem","nameProperty","property","Nav","nav","Header","headerWrapper","faJediOrder","App","arrayOfPeoples","arrayOfPlanets","arrayOfStarships","arrayOfVehicles","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7614aa8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageWrapper\":\"PeoplesPage_pageWrapper__3osUo\",\"nameWrapper\":\"PeoplesPage_nameWrapper__1KNc6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"specificItemWrapper\":\"SpecificItem_specificItemWrapper__cK4Ds\",\"mainInfo\":\"SpecificItem_mainInfo__24qm2\",\"photo\":\"SpecificItem_photo__26RLp\",\"info\":\"SpecificItem_info__kM2Ex\",\"infoItem\":\"SpecificItem_infoItem__1nFV7\",\"nameProperty\":\"SpecificItem_nameProperty__1V9vc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardNav\":\"BlockOnMainPage_cardNav__3XeRG\",\"container\":\"BlockOnMainPage_container__tZtBz\",\"block\":\"BlockOnMainPage_block__125iM\",\"block_item\":\"BlockOnMainPage_block_item__2Up1N\",\"mainImage\":\"BlockOnMainPage_mainImage__3kihy\",\"wrapperContainer\":\"BlockOnMainPage_wrapperContainer__3Olaw\",\"showAll\":\"BlockOnMainPage_showAll__1P_4Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardNav\":\"CardItem_cardNav__2zy8b\",\"container\":\"CardItem_container__sDI1r\",\"block\":\"CardItem_block__2lZDc\",\"block_item\":\"CardItem_block_item__30vff\",\"mainImage\":\"CardItem_mainImage__eBD57\",\"wrapperContainer\":\"CardItem_wrapperContainer__hNzeR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardNav\":\"AllItems_cardNav__3TbcF\",\"container\":\"AllItems_container__1vn2X\",\"block\":\"AllItems_block__3lyCN\",\"block_item\":\"AllItems_block_item__1MJy0\",\"mainImage\":\"AllItems_mainImage___elSk\",\"wrapperContainer\":\"AllItems_wrapperContainer__1vX7w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsWrapper\":\"ButtonComponent_buttonsWrapper__1qrWy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__3HRmH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerWrapper\":\"Header_headerWrapper__3RlgL\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://swapi.dev/api/'\r\n})\r\n\r\nexport const commonApi = {\r\n    getSpecificItem(species: string, id: string){\r\n        return instance.get(`${species}/${id}`)\r\n    },\r\n    getNextPage(species: string, page: number){\r\n        return instance.get(`${species}/?page=${page}`)\r\n    }\r\n\r\n    /*\"http://swapi.dev/api/people/?page=2\"*/\r\n}\r\n\r\nexport const peopleApi = {\r\n    getAllPeople(){\r\n        return instance.get(`people`)\r\n    }\r\n}\r\n\r\nexport const planetsApi = {\r\n    getAllPlanets(){\r\n        return instance.get(`planets`)\r\n    }\r\n}\r\n\r\nexport const starshipsApi = {\r\n    getAllStarships(){\r\n        return instance.get(`starships`)\r\n    }\r\n}\r\n\r\nexport const vehiclesApi = {\r\n    getAllVehicles(){\r\n        return instance.get(`vehicles`)\r\n    }\r\n}\r\n\r\n\r\n","import {Dispatch} from \"react\";\r\nimport {commonApi, peopleApi} from \"../api/api\";\r\n\r\nexport type PeopleItemStateType = {\r\n    birth_year: string\r\n    eye_color: string\r\n    films: Array<string>\r\n    gender: string\r\n    hair_color: string\r\n    height: string\r\n    homeworld: string\r\n    mass: string\r\n    name: string\r\n    skin_color: string\r\n    created: string\r\n    edited: string\r\n    species: Array<string>\r\n    starships: Array<string>\r\n    url: string\r\n    vehicles: Array<string>\r\n}\r\ntype PeopleStateType = {\r\n    people: Array<PeopleItemStateType>\r\n    count: number\r\n    //previous: null | string\r\n}\r\nconst initState: PeopleStateType = {\r\n    people: [],\r\n    count: 82\r\n}\r\n\r\nexport const peopleReducer = (state = initState, action: ActionTypes): PeopleStateType => {\r\n    switch (action.type) {\r\n        case 'SET_PEOPLE':\r\n            return {...state, people: [ ...action.payload.people]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//AC\r\ntype ActionTypes = ReturnType<typeof setPeopleAC>;\r\nexport const setPeopleAC = (people: Array<PeopleItemStateType>) => {\r\n    return {\r\n        type: 'SET_PEOPLE',\r\n        payload: {\r\n            people\r\n        }\r\n    } as const\r\n}\r\n//THUNK\r\nexport const getPeopleThunk = () => {\r\n    return (dispatch: Dispatch<ActionTypes>) => {\r\n            peopleApi.getAllPeople()\r\n                .then(response => {\r\n                    dispatch(setPeopleAC(response.data.results))\r\n                })\r\n    }\r\n}\r\n\r\nexport const getNextPagePeopleThunk = (species: string, page: number) => {\r\n    return (dispatch: Dispatch<ActionTypes>) => {\r\n        commonApi.getNextPage(species, page)\r\n            .then(response => {\r\n                dispatch(setPeopleAC(response.data.results))\r\n            })\r\n    }\r\n}\r\n","import style from './CardItem.module.scss'\r\nimport React, {SyntheticEvent} from \"react\";\r\nimport {NavLink, Route} from \"react-router-dom\";\r\nimport SpecificItem from \"../SpecificItem/SpecificItem\";\r\n\r\nexport type CardItemPropsType = {\r\n    pictureNumberString: string\r\n    itemName: string\r\n    imageURL: string\r\n    name: string\r\n}\r\n\r\nconst CardItem = (props: CardItemPropsType) => {\r\n\r\n    const error = (e: SyntheticEvent<HTMLImageElement>) => {\r\n        //@ts-ignore\r\n        e.target.src = 'https://starwars-visualguide.com/assets/img/placeholder.jpg'\r\n    }\r\n\r\n    return <NavLink className={style.cardNav} to={`/${props.name}/${props.pictureNumberString}`}>\r\n        <div className={style.block_item} key={props.pictureNumberString}>\r\n            <img src={props.imageURL + `${props.pictureNumberString}.jpg`}\r\n                 onError={error}\r\n                 alt={'image'}\r\n                 className={style.mainImage}/>\r\n            <span>{props.itemName}</span>\r\n\r\n        </div>\r\n    </NavLink>\r\n}\r\n\r\n\r\nexport default CardItem\r\n","\r\nexport const getPictureNumberString = (url:string) => {\r\n    let urlNumber = url.match(/[0-9]/g) || [];\r\n    let pictureNumberString = urlNumber.join('');\r\n    return pictureNumberString\r\n}\r\n\r\n","import React, {ReactEventHandler, SyntheticEvent, useEffect, useState} from 'react'\r\nimport {PeopleItemStateType} from \"../redux/people-reducer\";\r\nimport style from './BlockOnMainPage.module.scss'\r\nimport {PlanetItemStateType} from \"../redux/planet-reducer\";\r\nimport {StarshipItemStateType} from \"../redux/starships-reducer\";\r\nimport {VehicleItemStateType} from \"../redux/vehicles-reducer\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport CardItem from \"../CardItem/CardItem\";\r\nimport { getPictureNumberString } from '../common/commonFunctions';\r\n\r\ntype LocalStateType = Array<PeopleItemStateType> |\r\n    Array<PlanetItemStateType> |\r\n    Array<StarshipItemStateType> |\r\n    Array<VehicleItemStateType>\r\ntype ItemStateType = PeopleItemStateType | PlanetItemStateType |\r\n    StarshipItemStateType | VehicleItemStateType\r\n\r\ntype BlockOnMainPagePropsType = {\r\n    arrayOfElements: LocalStateType\r\n    imageURL: string\r\n    name: string\r\n}\r\n\r\n\r\nfunction BlockOnMainPage(props: BlockOnMainPagePropsType) {\r\n\r\n    let [state, setState] = useState<LocalStateType>([])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const newState = [];\r\n        if(props.arrayOfElements.length === 10){\r\n            for (let i = 0; i < 8; i++) {\r\n                newState.push(props.arrayOfElements[i])\r\n            }\r\n        }\r\n        setState(props.arrayOfElements)\r\n    }, [props.arrayOfElements])\r\n    const arrayBlocks = state.map((item: ItemStateType ) => {\r\n        const pictureNumberString = getPictureNumberString(item.url)\r\n        return <CardItem pictureNumberString={pictureNumberString}\r\n                         name={props.name.toLowerCase()}\r\n                         itemName={item.name}\r\n                         imageURL={props.imageURL}/>\r\n    })\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={style.wrapperContainer}>\r\n                <div className={style.container}>\r\n                    <h1>{props.name}</h1>\r\n                    <div className={style.block}>\r\n                        {arrayBlocks}\r\n                    </div>\r\n                    <NavLink to={`/${props.name.toLowerCase()}`} className={style.showAll}>\r\n                        show all {props.name.toLowerCase()}\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default BlockOnMainPage","import {Dispatch} from \"react\";\r\nimport {commonApi, planetsApi} from \"../api/api\";\r\nimport {setVehiclesAC} from \"./vehicles-reducer\";\r\n\r\nexport type PlanetItemStateType = {\r\n    climate: string\r\n    created: string\r\n    diameter: string\r\n    edited: string\r\n    films: Array<string>\r\n    gravity: string\r\n    name: string\r\n    orbital_period: string\r\n    population: string\r\n    residents: Array<string>\r\n    rotation_period: string\r\n    surface_water: string\r\n    terrain: string\r\n    url: string\r\n}\r\ntype PlanetsStateType = {\r\n    planets: Array<PlanetItemStateType>\r\n    count: number\r\n    //previous: null | string\r\n}\r\nconst initState: PlanetsStateType = {\r\n    planets: [],\r\n    count: 60\r\n}\r\n\r\n\r\nexport const planetsReducer = (state = initState, action: ActionTypes): PlanetsStateType => {\r\n    switch (action.type) {\r\n        case 'SET_PLANETS':\r\n            return {...state, planets: [...action.payload.planets]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//AC\r\ntype ActionTypes = ReturnType<typeof setPlanetsAC>;\r\nexport const setPlanetsAC = (planets: Array<PlanetItemStateType>) => {\r\n    return {\r\n        type: 'SET_PLANETS',\r\n        payload: {\r\n            planets: planets\r\n        }\r\n    } as const\r\n}\r\n//THUNK\r\nexport const getPlanetsThunk = () => {\r\n    return (dispatch: Dispatch<ActionTypes>) => {\r\n        planetsApi.getAllPlanets().then(response => {\r\n            dispatch(setPlanetsAC(response.data.results))\r\n        })\r\n    }\r\n}\r\nexport const getNextPagePlanetsThunk = (species: string, page: number) => {\r\n    return (dispatch: Dispatch<ActionTypes>) => {\r\n        commonApi.getNextPage(species, page)\r\n            .then(response => {\r\n                dispatch(setPlanetsAC(response.data.results))\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import {Dispatch} from \"react\";\r\nimport {commonApi, starshipsApi} from \"../api/api\";\r\nimport {setPeopleAC} from \"./people-reducer\";\r\n\r\nexport type StarshipItemStateType = {\r\n    MGLT: string\r\n    cargo_capacity: string\r\n    consumables: string\r\n    cost_in_credits: string\r\n    created: string\r\n    crew: string\r\n    edited: string\r\n    hyperdrive_rating: string\r\n    length: string\r\n    manufacturer: string\r\n    max_atmosphering_speed: string\r\n    model: string\r\n    name: string\r\n    passengers: string\r\n    films: string[]\r\n    pilots: string[]\r\n    starship_class: string\r\n    url: string\r\n}\r\ntype StarshipsStateType = {\r\n    starships: Array<StarshipItemStateType>\r\n    count: number\r\n    //previous: null | string\r\n}\r\nconst initState: StarshipsStateType = {\r\n    starships: [],\r\n    count: 36\r\n}\r\n\r\nexport const starshipsReducer = (state = initState, action: ActionTypes): StarshipsStateType => {\r\n    switch (action.type) {\r\n        case 'SET_STARSHIPS':\r\n            return {...state, starships: [ ...action.payload.starships]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//AC\r\ntype ActionTypes = ReturnType<typeof setStarshipsAC>;\r\nexport const setStarshipsAC = (starships: Array<StarshipItemStateType>) => {\r\n    return {\r\n        type: 'SET_STARSHIPS',\r\n        payload: {\r\n            starships\r\n        }\r\n    } as const\r\n}\r\n//THUNK\r\nexport const getStarshipsThunk = () => {\r\n    return (dispatch: Dispatch<ActionTypes>) => {\r\n            starshipsApi.getAllStarships()\r\n                .then(response => {\r\n                    dispatch(setStarshipsAC(response.data.results))\r\n                })\r\n    }\r\n}\r\n\r\nexport const getNextPageStarshipsThunk = (species: string, page: number) => {\r\n    return (dispatch: Dispatch<ActionTypes>) => {\r\n        commonApi.getNextPage(species, page)\r\n            .then(response => {\r\n                dispatch(setStarshipsAC(response.data.results))\r\n            })\r\n    }\r\n}\r\n","import {Dispatch} from \"react\";\r\nimport {commonApi, vehiclesApi} from \"../api/api\";\r\nimport {setStarshipsAC} from \"./starships-reducer\";\r\n\r\nexport type VehicleItemStateType = {\r\n    cargo_capacity: string\r\n    consumables: string\r\n    cost_in_credits: string\r\n    created: string\r\n    crew: string\r\n    edited: string\r\n    length: string\r\n    manufacturer: string\r\n    max_atmosphering_speed: string\r\n    model: string\r\n    name: string\r\n    passengers: string\r\n    pilots: string[]\r\n    films: string[]\r\n    url: string\r\n    vehicle_class: string\r\n}\r\ntype VehiclesStateType = {\r\n    vehicles: Array<VehicleItemStateType>\r\n    count: number\r\n    //previous: null | string\r\n}\r\nconst initState: VehiclesStateType = {\r\n    vehicles: [],\r\n    count: 39\r\n}\r\n\r\n\r\nexport const vehiclesReducer = (state = initState, action: ActionTypes): VehiclesStateType => {\r\n    switch (action.type) {\r\n        case 'SET_VEHICLES':\r\n            return {...state, vehicles: [...action.payload.vehicles]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//AC\r\ntype ActionTypes = ReturnType<typeof setVehiclesAC>;\r\nexport const setVehiclesAC = (vehicles: Array<VehicleItemStateType>) => {\r\n    return {\r\n        type: 'SET_VEHICLES',\r\n        payload: {\r\n            vehicles\r\n        }\r\n    } as const\r\n}\r\n//THUNK\r\nexport const getVehiclesThunk = () => {\r\n    return (dispatch: Dispatch<ActionTypes>) => {\r\n        vehiclesApi.getAllVehicles().then(response => {\r\n            dispatch(setVehiclesAC(response.data.results))\r\n        })\r\n    }\r\n}\r\n\r\nexport const getNextPageVehiclesThunk = (species: string, page: number) => {\r\n    return (dispatch: Dispatch<ActionTypes>) => {\r\n        commonApi.getNextPage(species, page)\r\n            .then(response => {\r\n                dispatch(setVehiclesAC(response.data.results))\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React, {useEffect} from 'react';\r\nimport style from \"./AllItems.module.scss\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../api/store\";\r\nimport {getPeopleThunk, PeopleItemStateType} from \"../redux/people-reducer\";\r\nimport {getPlanetsThunk, PlanetItemStateType} from \"../redux/planet-reducer\";\r\nimport {getStarshipsThunk, StarshipItemStateType} from \"../redux/starships-reducer\";\r\nimport {getVehiclesThunk, VehicleItemStateType} from \"../redux/vehicles-reducer\";\r\nimport {getPictureNumberString} from \"../common/commonFunctions\";\r\nimport CardItem, { CardItemPropsType } from \"../CardItem/CardItem\";\r\nimport { Route } from 'react-router-dom';\r\n\r\ntype AllItemsPropsType = {\r\n    typeOfItems: 'characters' | 'starships' | 'planets' | 'vehicles'\r\n\r\n}\r\n\r\ntype ArrayOfItemsType = Array<PeopleItemStateType> |\r\n    Array<PlanetItemStateType> |\r\n    Array<StarshipItemStateType> |\r\n    Array<VehicleItemStateType>\r\n\r\nconst AllItem = (props: AllItemsPropsType) => {\r\n\r\n    const baseImageURL = 'https://starwars-visualguide.com/assets/img/';\r\n\r\n    const {\r\n        peoplesData,\r\n        starshipsData,\r\n        vehiclesData,\r\n        planetsData\r\n    } = useSelector<RootStateType, RootStateType>(state => state);\r\n\r\n    let arrayOfItems: Array<any> = [];\r\n    const imageURL = baseImageURL + props.typeOfItems + '/';\r\n\r\n    switch (props.typeOfItems) {\r\n        case 'characters':\r\n            arrayOfItems = peoplesData.people.map((item) => {\r\n                const pictureNumberString = getPictureNumberString(item.url)\r\n                return <CardItem pictureNumberString={pictureNumberString}\r\n                                 name={props.typeOfItems}\r\n                                 itemName={item.name} imageURL={imageURL}/>\r\n            })\r\n            break\r\n        case 'planets':\r\n            arrayOfItems = planetsData.planets.map((item) => {\r\n                const pictureNumberString = getPictureNumberString(item.url)\r\n                return <CardItem pictureNumberString={pictureNumberString}\r\n                                 name={props.typeOfItems}\r\n                                 itemName={item.name} imageURL={imageURL}/>\r\n            })\r\n            break\r\n        case 'starships':\r\n            arrayOfItems = starshipsData.starships.map((item) => {\r\n                const pictureNumberString = getPictureNumberString(item.url)\r\n                return <CardItem pictureNumberString={pictureNumberString}\r\n                                 name={props.typeOfItems}\r\n                                 itemName={item.name} imageURL={imageURL}/>\r\n            })\r\n            break\r\n        case 'vehicles':\r\n            arrayOfItems = vehiclesData.vehicles.map((item) => {\r\n                const pictureNumberString = getPictureNumberString(item.url)\r\n                return <CardItem pictureNumberString={pictureNumberString}\r\n                                 name={props.typeOfItems}\r\n                                 itemName={item.name} imageURL={imageURL}/>\r\n            })\r\n            break\r\n        default:\r\n            break\r\n    }\r\n\r\n\r\n    return <div className={style.wrapperContainer}>\r\n        <div className={style.container}>\r\n            <div className={style.block}>\r\n                {arrayOfItems}\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default AllItem","import React from 'react';\r\nimport style from './ButtonComponent.module.scss'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport { faJediOrder } from '@fortawesome/free-brands-svg-icons';\r\n\r\n\r\n\r\ntype ButtonComponentType = {\r\n    nextPage: () => void\r\n    previousPage: () => void\r\n    maxPage: number\r\n    actualPage: number\r\n}\r\n\r\n\r\nconst ButtonComponent = (props: ButtonComponentType) => {\r\n\r\n    const nextPageCallback = () => {\r\n        props.nextPage()\r\n    }\r\n\r\n    const previousPageCallback = () => {\r\n        props.previousPage()\r\n    }\r\n\r\n    return <div className={style.buttonsWrapper}>\r\n        <button disabled={props.actualPage === 1} onClick={previousPageCallback}>\r\n            <FontAwesomeIcon size={'3x'} icon={faArrowLeft}/>\r\n        </button>\r\n        <button disabled={props.actualPage === props.maxPage} onClick={nextPageCallback}>\r\n            <FontAwesomeIcon size={'3x'} icon={faArrowRight}/>\r\n        </button>\r\n\r\n    </div>\r\n\r\n}\r\n\r\nexport default ButtonComponent","import React, { useEffect, useState } from 'react';\r\nimport AllItems from \"../AllItems/AllItems\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../api/store\";\r\nimport style from './../PeoplesPage/PeoplesPage.module.scss'\r\nimport ButtonComponent from '../ButtonComponent/ButtonComponent';\r\nimport {getNextPagePlanetsThunk} from \"../redux/planet-reducer\";\r\n\r\ntype PlanetsPagePropsType = {\r\n    typeOfItems: 'characters' | 'starships' | 'planets' | 'vehicles'\r\n}\r\n\r\nconst PlanetsPage = (props: PlanetsPagePropsType) => {\r\n\r\n    let [page, setPage] = useState<number>(1);\r\n\r\n    const count = useSelector<RootStateType, number>(state => state.planetsData.count);\r\n    const maxPage = Math.ceil(count / 10);\r\n    debugger\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect (() => {\r\n        debugger\r\n        dispatch(getNextPagePlanetsThunk('planets', page))\r\n    }, [page])\r\n\r\n    const nextPageHandler = () => {\r\n        setPage(page + 1)\r\n    }\r\n\r\n    const previousPageHandler = () => {\r\n        setPage(page - 1)\r\n    }\r\n\r\n    return <div className={style.pageWrapper}>\r\n        <div className={style.nameWrapper}>\r\n            <h1>Planets</h1>\r\n            <ButtonComponent nextPage={nextPageHandler}\r\n                             maxPage={maxPage}\r\n                             actualPage={page}\r\n                             previousPage={previousPageHandler}/>\r\n        </div>\r\n        <AllItems typeOfItems={props.typeOfItems}/>\r\n    </div>\r\n\r\n}\r\n\r\nexport default PlanetsPage","import React, { useEffect, useState } from 'react';\r\nimport AllItems from \"../AllItems/AllItems\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../api/store\";\r\nimport style from './../PeoplesPage/PeoplesPage.module.scss'\r\nimport ButtonComponent from '../ButtonComponent/ButtonComponent';\r\nimport { getNextPageStarshipsThunk } from '../redux/starships-reducer';\r\n\r\ntype StarshipsPagePropsType = {\r\n    typeOfItems: 'characters' | 'starships' | 'planets' | 'vehicles'\r\n}\r\n\r\nconst StarshipsPage = (props: StarshipsPagePropsType) => {\r\n\r\n    let [page, setPage] = useState<number>(1);\r\n\r\n    const count = useSelector<RootStateType, number>(state => state.starshipsData.count);\r\n    const maxPage = Math.ceil(count / 10);\r\n    debugger\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect (() => {\r\n        debugger\r\n        dispatch(getNextPageStarshipsThunk('starships', page))\r\n    }, [page])\r\n\r\n    const nextPageHandler = () => {\r\n        setPage(page + 1)\r\n    }\r\n\r\n    const previousPageHandler = () => {\r\n        setPage(page - 1)\r\n    }\r\n\r\n    return <div className={style.pageWrapper}>\r\n        <div className={style.nameWrapper}>\r\n            <h1>Starships</h1>\r\n            <ButtonComponent nextPage={nextPageHandler}\r\n                             maxPage={maxPage}\r\n                             actualPage={page}\r\n                             previousPage={previousPageHandler}/>\r\n        </div>\r\n        <AllItems typeOfItems={props.typeOfItems}/>\r\n    </div>\r\n\r\n}\r\n\r\nexport default StarshipsPage\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport AllItems from \"../AllItems/AllItems\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../api/store\";\r\nimport style from './../PeoplesPage/PeoplesPage.module.scss'\r\nimport ButtonComponent from '../ButtonComponent/ButtonComponent';\r\nimport {getNextPageVehiclesThunk} from \"../redux/vehicles-reducer\";\r\n\r\ntype VehiclesPagePropsType = {\r\n    typeOfItems: 'characters' | 'starships' | 'planets' | 'vehicles'\r\n}\r\n\r\nconst VehiclesPage = (props: VehiclesPagePropsType) => {\r\n\r\n    let [page, setPage] = useState<number>(1);\r\n\r\n    const count = useSelector<RootStateType, number>(state => state.vehiclesData.count);\r\n    const maxPage = Math.ceil(count / 10);\r\n    debugger\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect (() => {\r\n        debugger\r\n        dispatch(getNextPageVehiclesThunk('vehicles', page))\r\n    }, [page])\r\n\r\n    const nextPageHandler = () => {\r\n        setPage(page + 1)\r\n    }\r\n\r\n    const previousPageHandler = () => {\r\n        setPage(page - 1)\r\n    }\r\n\r\n    return <div className={style.pageWrapper}>\r\n        <div className={style.nameWrapper}>\r\n            <h1>Vehicles</h1>\r\n            <ButtonComponent nextPage={nextPageHandler}\r\n                             maxPage={maxPage}\r\n                             actualPage={page}\r\n                             previousPage={previousPageHandler}/>\r\n        </div>\r\n        <AllItems typeOfItems={props.typeOfItems}/>\r\n    </div>\r\n\r\n}\r\n\r\nexport default VehiclesPage","import React, { useEffect, useState } from 'react';\r\nimport AllItems from \"../AllItems/AllItems\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../api/store\";\r\nimport {getNextPagePeopleThunk, PeopleItemStateType} from \"../redux/people-reducer\";\r\nimport style from './PeoplesPage.module.scss'\r\nimport ButtonComponent from '../ButtonComponent/ButtonComponent';\r\n\r\ntype PeoplesPagePropsType = {\r\n    typeOfItems: 'characters' | 'starships' | 'planets' | 'vehicles'\r\n}\r\n\r\nconst PeoplesPage = (props: PeoplesPagePropsType) => {\r\n\r\n    let [page, setPage] = useState<number>(1);\r\n\r\n    const count = useSelector<RootStateType, number>(state => state.peoplesData.count);\r\n    const maxPage = Math.ceil(count / 10);\r\n    debugger\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect (() => {\r\n        debugger\r\n        dispatch(getNextPagePeopleThunk('people', page))\r\n    }, [page])\r\n\r\n    const nextPageHandler = () => {\r\n        setPage(page + 1)\r\n    }\r\n\r\n    const previousPageHandler = () => {\r\n        setPage(page - 1)\r\n    }\r\n\r\n    return <div className={style.pageWrapper}>\r\n        <div className={style.nameWrapper}>\r\n            <h1>Characters</h1>\r\n            <ButtonComponent nextPage={nextPageHandler}\r\n                             maxPage={maxPage}\r\n                             actualPage={page}\r\n                             previousPage={previousPageHandler}/>\r\n        </div>\r\n        <AllItems typeOfItems={props.typeOfItems}/>\r\n    </div>\r\n\r\n}\r\n\r\nexport default PeoplesPage","import {Dispatch} from \"react\";\r\nimport {commonApi, peopleApi} from \"../api/api\";\r\nimport { PeopleItemStateType } from \"./people-reducer\";\r\nimport {StarshipItemStateType} from \"./starships-reducer\";\r\nimport {PlanetItemStateType} from \"./planet-reducer\";\r\nimport {VehicleItemStateType} from \"./vehicles-reducer\";\r\n\r\nexport type SpecificItemType = PeopleItemStateType | StarshipItemStateType |\r\n    PlanetItemStateType | VehicleItemStateType;\r\n\r\nexport type SpecificItemStateType = {\r\n    specificItem: SpecificItemType\r\n}\r\n\r\nconst initState = {\r\n    specificItem: {} as SpecificItemType\r\n}\r\n\r\nexport const specificItemReducer = (state  = initState, action: ActionTypes): SpecificItemStateType => {\r\n    switch (action.type) {\r\n        case 'SET_SPECIFIC_ITEM':\r\n            return {...state, specificItem: action.payload.specificItem}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//AC\r\ntype ActionTypes = ReturnType<typeof setSpecificItemAC>;\r\nexport const setSpecificItemAC = (specificItem: SpecificItemType) => {\r\n    return {\r\n        type: 'SET_SPECIFIC_ITEM',\r\n        payload: {\r\n            specificItem\r\n        }\r\n    } as const\r\n}\r\n//THUNK\r\nexport const getSpecificItemThunk = (species: string, id: string) => {\r\n    return (dispatch: Dispatch<ActionTypes>) => {\r\n            commonApi.getSpecificItem(species, id)\r\n                .then(response => {\r\n                    dispatch(setSpecificItemAC(response.data))\r\n                })\r\n    }\r\n}\r\n","import React, {SyntheticEvent, useEffect} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport style from './SpecificItem.module.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getSpecificItemThunk, SpecificItemType} from \"../redux/specificItem-reducer\";\r\nimport {RootStateType} from \"../api/store\";\r\n\r\n\r\nconst SpecificItem = () => {\r\n\r\n    const {species, id} = useParams<{ species: string, id: string }>();\r\n    const dispatch = useDispatch();\r\n    const data = useSelector<RootStateType, SpecificItemType>(state => state.specificItemData.specificItem)\r\n\r\n    const imageURL = 'https://starwars-visualguide.com/assets/img/'\r\n    const error = (e: SyntheticEvent<HTMLImageElement>) => {\r\n        //@ts-ignore\r\n        e.target.src = 'https://starwars-visualguide.com/assets/img/placeholder.jpg'\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(species === 'characters'){\r\n            dispatch(getSpecificItemThunk('people', id))\r\n        } else {\r\n            dispatch(getSpecificItemThunk(species, id))\r\n        }\r\n    }, [])\r\n\r\n\r\n    const entries = Object.entries(data)\r\n    console.log(entries)\r\n\r\n    const sortEntries = entries.filter((item) => {\r\n        return item[0] !== \"films\" && item[0] !== 'species' && item[0] !== 'vehicles' && item[0] !== 'starships'\r\n            && item[0] !== 'created' && item[0] !== 'edited' && item[0] !== 'url' && item[0] !== 'homeworld'\r\n            && item[0] !== 'residents' && item[0] !== 'pilots';\r\n\r\n    })\r\n\r\n    const infoArray = sortEntries.map(item => {\r\n        const property = (item[0][0].toUpperCase() + item[0].substring(1) + ': ').split('_').join(' ');\r\n\r\n       return [property, item[1]]\r\n    })\r\n\r\n    console.log(infoArray)\r\n    return <div className={style.specificItemWrapper}>\r\n\r\n        <h1>\r\n            {infoArray[0] && infoArray[0][1]}\r\n        </h1>\r\n\r\n        <div className={style.mainInfo}>\r\n            <div className={style.photo}>\r\n\r\n                <img src={imageURL + `${species}/${id}.jpg`}\r\n                     onError={error}\r\n                     alt={'image'}\r\n                     className={style.mainImage}/>\r\n            </div>\r\n            <div className={style.info}>\r\n                {infoArray.splice(1).map(item => {\r\n                    return <div className={style.infoItem}>\r\n                        <span className={style.nameProperty}>{item[0] + '   '}</span>\r\n                        <span className={style.property}>{item[1]}</span>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default SpecificItem","import React from 'react';\r\nimport style from './Nav.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Nav = () => {\r\n    return <nav className={style.nav}>\r\n        <NavLink to={'/'}>Main</NavLink>\r\n        <NavLink to={'/characters'}>Characters</NavLink>\r\n        <NavLink to={'/planets'}>Planets</NavLink>\r\n        <NavLink to={'/starships'}>Starships</NavLink>\r\n        <NavLink to={'/vehicles'}>Vehicles</NavLink>\r\n    </nav>\r\n}\r\n\r\nexport default Nav","import React from 'react';\r\nimport Nav from '../Nav/Nav';\r\nimport style from './Header.module.scss'\r\nimport {faJediOrder} from \"@fortawesome/free-brands-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Header = () => {\r\n    return <header className={style.headerWrapper}>\r\n        <FontAwesomeIcon size={'4x'} icon={faJediOrder}/>\r\n        <Nav/>\r\n    </header>\r\n}\r\n\r\nexport default Header","import React, {useEffect} from 'react';\nimport './App.scss';\nimport { RootStateType } from './api/store';\nimport {getPeopleThunk, PeopleItemStateType} from './redux/people-reducer';\nimport BlockOnMainPage from \"./BlockOnMainPage/BlockOnMainPage\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport {getPlanetsThunk, PlanetItemStateType} from './redux/planet-reducer';\nimport {getStarshipsThunk, StarshipItemStateType } from './redux/starships-reducer';\nimport {getVehiclesThunk, VehicleItemStateType} from './redux/vehicles-reducer';\nimport Nav from './Nav/Nav';\nimport AllItems from \"./AllItems/AllItems\";\nimport { Route } from 'react-router-dom';\nimport PlanetsPage from \"./PlanetsPage/PlanetsPage\";\nimport StarshipsPage from \"./StarshipsPage/StarshipsPage\";\nimport VehiclesPage from \"./VehiclesPage/VehiclesPage\";\nimport PeoplesPage from \"./PeoplesPage/PeoplesPage\";\nimport SpecificItem from \"./SpecificItem/SpecificItem\";\nimport Header from './Header/Header';\n\n\n\n\nfunction App() {\n\n    const charactersImageURL = 'https://starwars-visualguide.com/assets/img/characters/';\n    const planetsImageURL = 'https://starwars-visualguide.com/assets/img/planets/';\n    const starshipsImageURL = 'https://starwars-visualguide.com/assets/img/starships/';\n    const vehiclesImageURL = 'https://starwars-visualguide.com/assets/img/vehicles/';\n\n    const dispatch = useDispatch()\n\n    const arrayOfPeoples = useSelector<RootStateType, Array<PeopleItemStateType>>(state => state.peoplesData.people);\n    const arrayOfPlanets = useSelector<RootStateType, Array<PlanetItemStateType>>(state => state.planetsData.planets);\n    const arrayOfStarships = useSelector<RootStateType, Array<StarshipItemStateType>>(state => state.starshipsData.starships);\n    const arrayOfVehicles = useSelector<RootStateType, Array<VehicleItemStateType>>(state => state.vehiclesData.vehicles);\n\n\n    useEffect(() => {\n        dispatch(getPeopleThunk())\n        dispatch(getPlanetsThunk())\n        dispatch(getStarshipsThunk())\n        dispatch(getVehiclesThunk())\n    },[])\n\n    return (\n        <div className=\"App\">\n            <Header/>\n\n            <Route exact path='/' render={() => <BlockOnMainPage arrayOfElements={arrayOfPeoples}\n                                                           name={'Characters'}\n                                                           imageURL={charactersImageURL} />}/>\n            <Route exact path='/' render={() => <BlockOnMainPage arrayOfElements={arrayOfPlanets}\n                                                           name={'Planets'}\n                                                           imageURL={planetsImageURL}/>}/>\n            <Route exact path='/' render={() => <BlockOnMainPage arrayOfElements={arrayOfStarships}\n                                                           name={'Starships'}\n                                                           imageURL={starshipsImageURL}/>}/>\n            <Route exact path='/' render={() => <BlockOnMainPage arrayOfElements={arrayOfVehicles}\n                                                           name={'Vehicles'}\n                                                           imageURL={vehiclesImageURL}/>}/>\n\n            <Route exact path='/characters' render={() => <PeoplesPage typeOfItems={'characters'}/>}/>\n            <Route exact path='/starships' render={() => <StarshipsPage typeOfItems={'starships'}/>}/>\n            <Route exact path='/vehicles' render={() => <VehiclesPage typeOfItems={'vehicles'}/>}/>\n            <Route exact path='/planets' render={() => <PlanetsPage typeOfItems={'planets'}/>}/>\n\n            <Route path={`/:species/:id`} render={() => <SpecificItem/>}/>\n        </div>\n    );\n}\n\nexport default App\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import thunkMiddleware from 'redux-thunk'\r\nimport { peopleReducer } from \"../redux/people-reducer\";\r\nimport {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {planetsReducer} from \"../redux/planet-reducer\";\r\nimport {starshipsReducer} from \"../redux/starships-reducer\";\r\nimport { vehiclesReducer } from '../redux/vehicles-reducer';\r\nimport { specificItemReducer } from '../redux/specificItem-reducer';\r\n\r\n\r\n\r\nlet reducers = combineReducers({\r\n    peoplesData: peopleReducer,\r\n    planetsData: planetsReducer,\r\n    starshipsData: starshipsReducer,\r\n    vehiclesData: vehiclesReducer,\r\n    specificItemData: specificItemReducer\r\n})\r\n\r\nexport type ReducersType = typeof reducers;\r\nexport type RootStateType = ReturnType<ReducersType>\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from './api/store';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <BrowserRouter>\n                <App/>\n            </BrowserRouter>\n        </Provider>\n\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}